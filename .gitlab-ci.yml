# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: maven:3.8.6-openjdk-18

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository/
    - target/

stages:          # List of stages for jobs, and their order of execution
  - build
  #- test
  #- report
  - debug
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - mvn $MAVEN_CLI_OPTS compile
    - echo "Compile complete."

#serenity-test:   
#  stage: test   
#  script:
#    - echo "Running e2e tests..."
#    - mvn clean $MAVEN_CLI_OPTS verify
#    - echo "Testing complete"
#  artifacts:
#    when: always
#    paths:
#      - target/site/serenity
#    expire_in: 1 week
#  only:
#    - master

#publish-report:
#  stage: report
#  only:
#    - master
#  script:
#    - mkdir public
#    - mv target/site/serenity/* public
# artifacts:
#    when: always
#    paths:
#      - public
#    expire_in: 1 week

debug-job:
  stage: debug
  script:
    - curl -H"Authorization:Bearer $MAVEN_ACCESS_TOKEN" $MAVEN_REPO_URL/default-maven-local/

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    #- mvn clean $MAVEN_CLI_OPTS package -DskipTests=true
    - mvn $MAVEN_CLI_OPTS deploy
    - echo "Application successfully deployed."
  artifacts:
    when: on_success
    paths:
      - target/*.jar
  only:
    - master
